// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPI.Models;

namespace WebAPI.Migrations
{
    [DbContext(typeof(BibliotekaContext))]
    [Migration("20220314111109_V5")]
    partial class V5
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebAPI.Models.Autor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ime")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("Ime");

                    b.Property<string>("Prezime")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Prezime");

                    b.HasKey("ID");

                    b.ToTable("Autori");
                });

            modelBuilder.Entity("WebAPI.Models.Biblioteka", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Adresa");

                    b.Property<string>("Naziv")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("Naziv");

                    b.HasKey("ID");

                    b.ToTable("Biblioteke");
                });

            modelBuilder.Entity("WebAPI.Models.Clan", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BibliotekaID")
                        .HasColumnType("int");

                    b.Property<int>("IDBiblioteke")
                        .HasColumnType("int")
                        .HasColumnName("IDBiblioteke");

                    b.Property<string>("Ime")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("Ime");

                    b.Property<string>("JMBG")
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)")
                        .HasColumnName("JMBG");

                    b.Property<string>("Prezime")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Prezime");

                    b.HasKey("ID");

                    b.HasIndex("BibliotekaID");

                    b.ToTable("Clanovi");
                });

            modelBuilder.Entity("WebAPI.Models.Iznajmljivanje", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClanID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2")
                        .HasColumnName("Datum");

                    b.Property<int?>("KnjigeID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ClanID");

                    b.HasIndex("KnjigeID");

                    b.ToTable("Iznajmljivanja");
                });

            modelBuilder.Entity("WebAPI.Models.Knjiga", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AutorID")
                        .HasColumnType("int");

                    b.Property<int?>("BibliotekaID")
                        .HasColumnType("int");

                    b.Property<int>("BrojStrana")
                        .HasColumnType("int")
                        .HasColumnName("BrojStrana");

                    b.Property<int>("Godina")
                        .HasColumnType("int")
                        .HasColumnName("Godina");

                    b.Property<int>("IDBiblioteke")
                        .HasColumnType("int")
                        .HasColumnName("IDBiblioteke");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Naziv");

                    b.HasKey("ID");

                    b.HasIndex("AutorID");

                    b.HasIndex("BibliotekaID");

                    b.ToTable("Knjige");
                });

            modelBuilder.Entity("WebAPI.Models.Clan", b =>
                {
                    b.HasOne("WebAPI.Models.Biblioteka", null)
                        .WithMany("Clanovi")
                        .HasForeignKey("BibliotekaID");
                });

            modelBuilder.Entity("WebAPI.Models.Iznajmljivanje", b =>
                {
                    b.HasOne("WebAPI.Models.Clan", "Clan")
                        .WithMany("ClanKnjige")
                        .HasForeignKey("ClanID");

                    b.HasOne("WebAPI.Models.Knjiga", "Knjige")
                        .WithMany("KnjigaClan")
                        .HasForeignKey("KnjigeID");

                    b.Navigation("Clan");

                    b.Navigation("Knjige");
                });

            modelBuilder.Entity("WebAPI.Models.Knjiga", b =>
                {
                    b.HasOne("WebAPI.Models.Autor", "Autor")
                        .WithMany("Knjige")
                        .HasForeignKey("AutorID");

                    b.HasOne("WebAPI.Models.Biblioteka", null)
                        .WithMany("Knjige")
                        .HasForeignKey("BibliotekaID");

                    b.Navigation("Autor");
                });

            modelBuilder.Entity("WebAPI.Models.Autor", b =>
                {
                    b.Navigation("Knjige");
                });

            modelBuilder.Entity("WebAPI.Models.Biblioteka", b =>
                {
                    b.Navigation("Clanovi");

                    b.Navigation("Knjige");
                });

            modelBuilder.Entity("WebAPI.Models.Clan", b =>
                {
                    b.Navigation("ClanKnjige");
                });

            modelBuilder.Entity("WebAPI.Models.Knjiga", b =>
                {
                    b.Navigation("KnjigaClan");
                });
#pragma warning restore 612, 618
        }
    }
}
